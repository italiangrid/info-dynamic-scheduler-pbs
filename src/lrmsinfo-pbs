#!/usr/bin/python
# Copyright (c) Members of the EGEE Collaboration. 2004. 
# See http://www.eu-egee.org/partners/ for details on the copyright
# holders.  
#
# Licensed under the Apache License, Version 2.0 (the "License"); 
# you may not use this file except in compliance with the License. 
# You may obtain a copy of the License at 
#
#     http://www.apache.org/licenses/LICENSE-2.0 
#
# Unless required by applicable law or agreed to in writing, software 
# distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
# See the License for the specific language governing permissions and 
# limitations under the License.
# get information from pbs/torque LRMS, spit it out in uniform format

def usage():
    print "Usage: lrmsinfo-pbs [-i <input_file>]"
    print "  input_file : optional text file containing 'qstat -f' output"

import sys
import getopt
import string

from pbsServer import LiveServer

try:
    opts, args = getopt.getopt(sys.argv[1:], "i:",
                               ["input="])
except getopt.GetoptError:
    # print help information and exit:
    print sys.argv[0] + ": error parsing command line: " + \
          string.join(sys.argv)
    usage()
    sys.exit(2)

infile = None

for o, a in opts:
    if o in ("-i", "--input"):
        infile = a
        
if infile:
    cmd = '/bin/cat ' + infile
else:
    cmd = 'diagnose -g'

#sys.path.append('@TARGPREFIX@/@MODSUFFIX@')

if infile:
    bq = LiveServer(file=infile)
else:
    bq = LiveServer()

tf = sys.stdout
tf.write("nactive      %d\n" % (bq.slotsUp))
tf.write("nfree        %d\n" % (bq.slotsFree))
tf.write("now          %d\n" % (bq.now))
tf.write("schedCycle   %d\n" % (bq.schedCycle))

for job in bq.jobs():
    tf.write(job.attDictString() + "\n")
    
tf.close()

