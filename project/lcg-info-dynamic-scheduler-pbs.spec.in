Summary: Plugins for the lcg-info-dynamic-scheduler GIP plugin
Name: lcg-info-dynamic-scheduler-pbs
Version: @PKGVERSION@
Release: @PKGRELEASE@%{?dist}%{!?dist:.el5}
License: Apache Software License
Vendor: EMI
URL: http://glite.cern.ch/
Group: Applications/Internet
BuildArch: noarch
Obsoletes: info-dynamic-pbs <= 3.0.1
Provides: info-dynamic-pbs = 3.0.2
Requires: maui-client
Requires: dynsched-generic  >= 2.5.3
BuildRoot: %{_tmppath}/%{name}-%{version}-%{release}-root-%(%{__id_u} -n)
AutoReqProv: yes
Source: %{name}.tar.gz


%if ! (0%{?fedora} > 12 || 0%{?rhel} > 5)
%{!?python_sitelib: %global python_sitelib %(%{__python} -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())")}
%{!?python_sitearch: %global python_sitearch %(%{__python} -c "from distutils.sysconfig import get_python_lib; print(get_python_lib(1))")}
%endif

%description
Plugins for the lcg-info-dynamic-scheduler GIP plugin.  The two 
plugins here are for Maui (scheduler) and PBS/Torque (LRMS).

%prep

%setup -c -q

%build

%install
rm -rf %{buildroot}
mkdir -p %{buildroot}
python setup.py install -O1 --prefix %{buildroot}/usr --install-data %{buildroot}

%clean
rm -rf %{buildroot}

%files
%defattr(-,root,root)
/usr/libexec/info-dynamic-pbs
/usr/libexec/lrmsinfo-pbs
/usr/libexec/vomaxjobs-maui
%dir %{python_sitelib}/TorqueInfoUtils
%{python_sitelib}/TorqueInfoUtils/*.py
%{python_sitelib}/TorqueInfoUtils/*.pyc
%{python_sitelib}/TorqueInfoUtils/*.pyo
%if 0%{?el6}
%{python_sitelib}/*.egg-info
%endif

%post
TMPVAR=`grep -Eo '\[LRMS\]' /etc/lrms/scheduler.conf`
if [ "x${TMPVAR}" == "x" ] ; then

    cat << EOF >> /etc/lrms/scheduler.conf
[LRMS]
lrms_backend_cmd: /usr/libexec/lrmsinfo-pbs
[Scheduler]
cycle_time: 0
vo_max_jobs_cmd: /usr/libexec/vomaxjobs-maui
EOF
    
fi

%preun
sed -i -e 's|\[LRMS\]||g' \
       -e 's|lrms_backend_cmd.*||g' \
       -e 's|\[Scheduler\]||g' \
       -e 's|cycle_time.*||g' \
       -e 's|vo_max_jobs_cmd.*||g' /etc/lrms/scheduler.conf

%triggerin -- bdii
INFOD_WRAP=/var/lib/bdii/gip/plugin/glite-info-dynamic-ce
if [ ! -e ${INFOD_WRAP} ] ; then
    cat << EOF > ${INFOD_WRAP}
#!/bin/sh
/usr/libexec/info-dynamic-pbs /etc/lrms/scheduler.conf
EOF
    chmod a+x ${INFOD_WRAP}

fi

%triggerun -- bdii
rm -f /var/lib/bdii/gip/plugin/glite-info-dynamic-ce

%posttrans
# workaround to get rid of old pbs.conf file
# back compatible with YAIM reconfiguration
ln -sf /etc/lrms/scheduler.conf /etc/lrms/pbs.conf

%changelog
* Fri Aug 31 2012 CREAM group <cream-support@lists.infn.it> - @PKGVERSION@-@PKGRELEASE@
- New major release


